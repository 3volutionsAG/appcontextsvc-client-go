variables:
  GIT_DEPTH: 1
  ARCHIVE_URL: "https://gitlab.com/api/v4/projects/24819805/repository/archive.zip?sha=v${APP_VERSION}"

build:client:go:
  image: golang:1.19
  before_script:
    - |
      apt-get update; \
        apt-get install -y --no-install-recommends \
        build-essential \
        curl \
        libprotobuf-dev \
        protobuf-compiler \
        clang-format \
        unzip
    - go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.28
    - go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.2
    - 'curl -L --header "PRIVATE-TOKEN: ${APPCONTEXTSVC_ACCESS}" "${ARCHIVE_URL}" -o archive.zip'
    - unzip archive.zip "**/src/Protos/*" -d release_source
    - rm -rf ./protos
    - mkdir ./protos
    - mv ./release_source/*/src/Protos/** ./protos
    - rm -rf ./release_source && rm -rf release_source_code.zip
    - git config --global user.email "${GITLAB_USER_EMAIL}"
    - git config --global user.name "${GITLAB_USER_NAME}"
  script:
    - chmod +x ./scripts/build-go-client.sh
    - ./scripts/build-go-client.sh
    - git add .
    - 'git diff --staged --quiet || git commit --allow-empty -m "chore(release): update to version ${APP_VERSION}"'
    - git tag "${APP_VERSION}"
    - git push "https://${GITLAB_USER_NAME}:${CI_ACCESS_TOKEN}@${CI_REPOSITORY_URL#*@}" "HEAD:${CI_COMMIT_REF_NAME}" -o ci.skip
    - git push --tags "https://${GITLAB_USER_NAME}:${CI_ACCESS_TOKEN}@${CI_REPOSITORY_URL#*@}" "HEAD:${CI_COMMIT_REF_NAME}" -o ci.skip
  rules:
    - if: $APP_VERSION
