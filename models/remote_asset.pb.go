// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.6
// source: models/remote_asset.proto

package models

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RemoteAsset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                     *string  `protobuf:"bytes,1,opt,name=id,proto3,oneof" json:"id,omitempty"`
	Name                   *string  `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	City                   *string  `protobuf:"bytes,3,opt,name=city,proto3,oneof" json:"city,omitempty"`
	Country                *string  `protobuf:"bytes,4,opt,name=country,proto3,oneof" json:"country,omitempty"`
	Email                  *string  `protobuf:"bytes,5,opt,name=email,proto3,oneof" json:"email,omitempty"`
	Street                 *string  `protobuf:"bytes,6,opt,name=street,proto3,oneof" json:"street,omitempty"`
	State                  *string  `protobuf:"bytes,7,opt,name=state,proto3,oneof" json:"state,omitempty"`
	ZipCode                *string  `protobuf:"bytes,8,opt,name=zip_code,json=zipCode,proto3,oneof" json:"zip_code,omitempty"`
	Capacity               *int32   `protobuf:"varint,9,opt,name=capacity,proto3,oneof" json:"capacity,omitempty"`
	RemoteConnectionId     *string  `protobuf:"bytes,10,opt,name=remote_connection_id,json=remoteConnectionId,proto3,oneof" json:"remote_connection_id,omitempty"`
	AudioDeviceName        *string  `protobuf:"bytes,11,opt,name=audio_device_name,json=audioDeviceName,proto3,oneof" json:"audio_device_name,omitempty"`
	BookingType            *string  `protobuf:"bytes,12,opt,name=booking_type,json=bookingType,proto3,oneof" json:"booking_type,omitempty"`
	Building               *string  `protobuf:"bytes,13,opt,name=building,proto3,oneof" json:"building,omitempty"`
	DisplayDeviceName      *string  `protobuf:"bytes,14,opt,name=display_device_name,json=displayDeviceName,proto3,oneof" json:"display_device_name,omitempty"`
	FloorNumber            *int32   `protobuf:"varint,15,opt,name=floor_number,json=floorNumber,proto3,oneof" json:"floor_number,omitempty"`
	FloorLabel             *string  `protobuf:"bytes,16,opt,name=floor_label,json=floorLabel,proto3,oneof" json:"floor_label,omitempty"`
	Altitude               *float64 `protobuf:"fixed64,17,opt,name=altitude,proto3,oneof" json:"altitude,omitempty"`
	Longitude              *float64 `protobuf:"fixed64,18,opt,name=longitude,proto3,oneof" json:"longitude,omitempty"`
	Latitude               *float64 `protobuf:"fixed64,19,opt,name=latitude,proto3,oneof" json:"latitude,omitempty"`
	IsWheelChairAccessible *bool    `protobuf:"varint,20,opt,name=is_wheel_chair_accessible,json=isWheelChairAccessible,proto3,oneof" json:"is_wheel_chair_accessible,omitempty"`
	Label                  *string  `protobuf:"bytes,21,opt,name=label,proto3,oneof" json:"label,omitempty"`
	Nickname               *string  `protobuf:"bytes,22,opt,name=nickname,proto3,oneof" json:"nickname,omitempty"`
	Phone                  *string  `protobuf:"bytes,23,opt,name=phone,proto3,oneof" json:"phone,omitempty"`
	VideoDeviceName        *string  `protobuf:"bytes,24,opt,name=video_device_name,json=videoDeviceName,proto3,oneof" json:"video_device_name,omitempty"`
	Upn                    string   `protobuf:"bytes,25,opt,name=upn,proto3" json:"upn,omitempty"`
}

func (x *RemoteAsset) Reset() {
	*x = RemoteAsset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_models_remote_asset_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoteAsset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoteAsset) ProtoMessage() {}

func (x *RemoteAsset) ProtoReflect() protoreflect.Message {
	mi := &file_models_remote_asset_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoteAsset.ProtoReflect.Descriptor instead.
func (*RemoteAsset) Descriptor() ([]byte, []int) {
	return file_models_remote_asset_proto_rawDescGZIP(), []int{0}
}

func (x *RemoteAsset) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *RemoteAsset) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *RemoteAsset) GetCity() string {
	if x != nil && x.City != nil {
		return *x.City
	}
	return ""
}

func (x *RemoteAsset) GetCountry() string {
	if x != nil && x.Country != nil {
		return *x.Country
	}
	return ""
}

func (x *RemoteAsset) GetEmail() string {
	if x != nil && x.Email != nil {
		return *x.Email
	}
	return ""
}

func (x *RemoteAsset) GetStreet() string {
	if x != nil && x.Street != nil {
		return *x.Street
	}
	return ""
}

func (x *RemoteAsset) GetState() string {
	if x != nil && x.State != nil {
		return *x.State
	}
	return ""
}

func (x *RemoteAsset) GetZipCode() string {
	if x != nil && x.ZipCode != nil {
		return *x.ZipCode
	}
	return ""
}

func (x *RemoteAsset) GetCapacity() int32 {
	if x != nil && x.Capacity != nil {
		return *x.Capacity
	}
	return 0
}

func (x *RemoteAsset) GetRemoteConnectionId() string {
	if x != nil && x.RemoteConnectionId != nil {
		return *x.RemoteConnectionId
	}
	return ""
}

func (x *RemoteAsset) GetAudioDeviceName() string {
	if x != nil && x.AudioDeviceName != nil {
		return *x.AudioDeviceName
	}
	return ""
}

func (x *RemoteAsset) GetBookingType() string {
	if x != nil && x.BookingType != nil {
		return *x.BookingType
	}
	return ""
}

func (x *RemoteAsset) GetBuilding() string {
	if x != nil && x.Building != nil {
		return *x.Building
	}
	return ""
}

func (x *RemoteAsset) GetDisplayDeviceName() string {
	if x != nil && x.DisplayDeviceName != nil {
		return *x.DisplayDeviceName
	}
	return ""
}

func (x *RemoteAsset) GetFloorNumber() int32 {
	if x != nil && x.FloorNumber != nil {
		return *x.FloorNumber
	}
	return 0
}

func (x *RemoteAsset) GetFloorLabel() string {
	if x != nil && x.FloorLabel != nil {
		return *x.FloorLabel
	}
	return ""
}

func (x *RemoteAsset) GetAltitude() float64 {
	if x != nil && x.Altitude != nil {
		return *x.Altitude
	}
	return 0
}

func (x *RemoteAsset) GetLongitude() float64 {
	if x != nil && x.Longitude != nil {
		return *x.Longitude
	}
	return 0
}

func (x *RemoteAsset) GetLatitude() float64 {
	if x != nil && x.Latitude != nil {
		return *x.Latitude
	}
	return 0
}

func (x *RemoteAsset) GetIsWheelChairAccessible() bool {
	if x != nil && x.IsWheelChairAccessible != nil {
		return *x.IsWheelChairAccessible
	}
	return false
}

func (x *RemoteAsset) GetLabel() string {
	if x != nil && x.Label != nil {
		return *x.Label
	}
	return ""
}

func (x *RemoteAsset) GetNickname() string {
	if x != nil && x.Nickname != nil {
		return *x.Nickname
	}
	return ""
}

func (x *RemoteAsset) GetPhone() string {
	if x != nil && x.Phone != nil {
		return *x.Phone
	}
	return ""
}

func (x *RemoteAsset) GetVideoDeviceName() string {
	if x != nil && x.VideoDeviceName != nil {
		return *x.VideoDeviceName
	}
	return ""
}

func (x *RemoteAsset) GetUpn() string {
	if x != nil {
		return x.Upn
	}
	return ""
}

var File_models_remote_asset_proto protoreflect.FileDescriptor

var file_models_remote_asset_proto_rawDesc = []byte{
	0x0a, 0x19, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x61, 0x70, 0x70,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x1a, 0x17,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe8, 0x09, 0x0a, 0x0b, 0x52, 0x65, 0x6d, 0x6f,
	0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x1d,
	0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x03, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x65,
	0x65, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x06, 0x73, 0x74, 0x72, 0x65,
	0x65, 0x74, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x1e, 0x0a, 0x08, 0x7a, 0x69, 0x70, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x07, 0x52, 0x07, 0x7a, 0x69, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x1f, 0x0a, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x05, 0x48, 0x08, 0x52, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x88, 0x01,
	0x01, 0x12, 0x42, 0x0a, 0x14, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0b, 0xfa, 0x42, 0x08, 0x72, 0x06, 0xb0, 0x01, 0x01, 0xd0, 0x01, 0x01, 0x48, 0x09, 0x52, 0x12,
	0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x11, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x5f, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x0a, 0x52, 0x0f, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e,
	0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0b, 0x52, 0x0b,
	0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f,
	0x0a, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x0c, 0x52, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x88, 0x01, 0x01, 0x12,
	0x33, 0x0a, 0x13, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0d, 0x52, 0x11,
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x48, 0x0e, 0x52, 0x0b, 0x66, 0x6c,
	0x6f, 0x6f, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b,
	0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x0f, 0x52, 0x0a, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x88,
	0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x61, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x01, 0x48, 0x10, 0x52, 0x08, 0x61, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x01, 0x48, 0x11, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75,
	0x64, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x01, 0x48, 0x12, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69,
	0x74, 0x75, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x3e, 0x0a, 0x19, 0x69, 0x73, 0x5f, 0x77, 0x68,
	0x65, 0x65, 0x6c, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x69, 0x62, 0x6c, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08, 0x48, 0x13, 0x52, 0x16, 0x69, 0x73,
	0x57, 0x68, 0x65, 0x65, 0x6c, 0x43, 0x68, 0x61, 0x69, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x69, 0x62, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x48, 0x14, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x88,
	0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x15, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x17, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x16, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2f,
	0x0a, 0x11, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x48, 0x17, 0x52, 0x0f, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x70, 0x6e, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x70,
	0x6e, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x63, 0x69, 0x74, 0x79, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x7a, 0x69, 0x70, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x42,
	0x17, 0x0a, 0x15, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x61, 0x75, 0x64,
	0x69, 0x6f, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0f,
	0x0a, 0x0d, 0x5f, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42,
	0x0b, 0x0a, 0x09, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x16, 0x0a, 0x14,
	0x5f, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x5f,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x61, 0x6c, 0x74, 0x69, 0x74, 0x75,
	0x64, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x42, 0x1c, 0x0a,
	0x1a, 0x5f, 0x69, 0x73, 0x5f, 0x77, 0x68, 0x65, 0x65, 0x6c, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x72,
	0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x42, 0x14, 0x0a, 0x12,
	0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x42, 0x55, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x2d, 0x6d, 0x65, 0x2f, 0x61, 0x70, 0x70, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x73, 0x76, 0x63, 0x2d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2d, 0x67,
	0x6f, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0xaa, 0x02, 0x1e, 0x41, 0x70, 0x70, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e,
	0x56, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_models_remote_asset_proto_rawDescOnce sync.Once
	file_models_remote_asset_proto_rawDescData = file_models_remote_asset_proto_rawDesc
)

func file_models_remote_asset_proto_rawDescGZIP() []byte {
	file_models_remote_asset_proto_rawDescOnce.Do(func() {
		file_models_remote_asset_proto_rawDescData = protoimpl.X.CompressGZIP(file_models_remote_asset_proto_rawDescData)
	})
	return file_models_remote_asset_proto_rawDescData
}

var file_models_remote_asset_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_models_remote_asset_proto_goTypes = []interface{}{
	(*RemoteAsset)(nil), // 0: appcontext.models.RemoteAsset
}
var file_models_remote_asset_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_models_remote_asset_proto_init() }
func file_models_remote_asset_proto_init() {
	if File_models_remote_asset_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_models_remote_asset_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoteAsset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_models_remote_asset_proto_msgTypes[0].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_models_remote_asset_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_models_remote_asset_proto_goTypes,
		DependencyIndexes: file_models_remote_asset_proto_depIdxs,
		MessageInfos:      file_models_remote_asset_proto_msgTypes,
	}.Build()
	File_models_remote_asset_proto = out.File
	file_models_remote_asset_proto_rawDesc = nil
	file_models_remote_asset_proto_goTypes = nil
	file_models_remote_asset_proto_depIdxs = nil
}
